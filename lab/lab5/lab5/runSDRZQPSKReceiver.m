function [BER, lostSamples] = runSDRZQPSKReceiver(prmQPSKReceiver)

%   Copyright 2014 The MathWorks, Inc.

%#codegen
coder.extrinsic('fprintf');

persistent hRx hSDR
if isempty(hRx)
    hRx = sdrzQPSKRx( ...
        'DesiredAmplitude',             1/sqrt(prmQPSKReceiver.Upsampling), ...
        'ModulationOrder',              prmQPSKReceiver.M, ...
        'DownsamplingFactor',           prmQPSKReceiver.Downsampling, ...
        'CoarseCompFrequencyResolution',prmQPSKReceiver.CoarseCompFrequencyResolution, ...
        'PhaseRecoveryLoopBandwidth',   prmQPSKReceiver.PhaseRecoveryLoopBandwidth, ...
        'PhaseRecoveryDampingFactor',   prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'TimingRecoveryLoopBandwidth',  prmQPSKReceiver.TimingRecoveryLoopBandwidth, ...
        'TimingRecoveryDampingFactor',  prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'PostFilterOversampling',       prmQPSKReceiver.Upsampling/prmQPSKReceiver.Downsampling, ...
        'PhaseErrorDetectorGain',       prmQPSKReceiver.PhaseErrorDetectorGain, ...
        'PhaseRecoveryGain',            prmQPSKReceiver.PhaseRecoveryGain, ...
        'TimingErrorDetectorGain',      prmQPSKReceiver.TimingErrorDetectorGain, ...
        'TimingRecoveryGain',           prmQPSKReceiver.TimingRecoveryGain, ...
        'FrameSize',                    prmQPSKReceiver.FrameSize, ...
        'BarkerLength',                 prmQPSKReceiver.BarkerLength, ...
        'MessageLength',                prmQPSKReceiver.MessageLength, ...
        'SampleRate',                   prmQPSKReceiver.Fs, ...
        'DataLength',                   prmQPSKReceiver.DataLength, ...
        'ReceiverFilterCoefficients',   prmQPSKReceiver.ReceiverFilterCoefficients, ...
        'DescramblerBase',              prmQPSKReceiver.ScramblerBase, ...
        'DescramblerPolynomial',        prmQPSKReceiver.ScramblerPolynomial, ...
        'DescramblerInitialConditions', prmQPSKReceiver.ScramblerInitialConditions,...
        'PrintOption',                  true);

    hSDR = sdrrx(prmQPSKReceiver.SDRDeviceName,...
    'IPAddress',             prmQPSKReceiver.RadioIP, ...
    'CenterFrequency',       prmQPSKReceiver.RadioCenterFrequency, ...
    'ADCRate',               prmQPSKReceiver.RadioADCRate, ...
    'Gain',                  prmQPSKReceiver.RadioGain, ...
    'DecimationFactor',      prmQPSKReceiver.RadioDecimationFactor, ...
    'FrameLength',           prmQPSKReceiver.RadioFrameLength, ...
    'IntermediateFrequency', prmQPSKReceiver.RadioIntermediateFrequency,...
    'OutputDataType',        'double',...
    'BypassUserLogic',       true);
end

% Initialize variables
currentTime = 0;
len = uint32(0);
lostSamples = uint32(0);
lost = uint32(0);
BER = NaN;
corruptSignal = complex(zeros(4000,1));

approxInitTime = 4; % A rough estimate of the time taken to start receiving
fprintf(['Starting reception... \n\n'...
                'If the execution time is significantly longer than %gs'...
                ' you are probably not running in real time.\n'],...
                prmQPSKReceiver.StopTime + approxInitTime);

while currentTime <  prmQPSKReceiver.StopTime
    % Keep accessing the SDR System object output until it is valid
    while len <= 0
        [corruptSignal, len, lost] = step(hSDR);
    end
    lostSamples = lostSamples + lost;
    % When the SDR System object output is valid, decode the received
    % message
    if len > 0
        BER = step(hRx, corruptSignal);
    end
    % Update simulation time
    currentTime = currentTime + prmQPSKReceiver.FrameTime;
    len=uint32(0);
end
  
release(hRx);
release(hSDR);



